"""
This type stub file was generated by pyright.
"""

"""
This type stub file was generated by pyright.
"""
internal_sum = ...
def distance(a, b):
    ...

def distance_2d(a, b):
    ...

def distance_xz(a, b):
    ...

def lerp(a, b, t):
    ...

def inverselerp(a, b, t):
    ...

def lerp_angle(start_angle, end_angle, t):
    ...

def slerp(q1, q2, t):
    ...

def clamp(value, floor, ceiling):
    ...

def round_to_closest(value, step=...):
    ...

def rotate_around_point_2d(point, origin, deg):
    ...

def world_position_to_screen_position(point):
    ...

def sum(l):
    ...

def make_gradient(index_color_dict):
    '''
    given a dict of positions and colors, interpolates the colors into a list of 256 colors
    example input: {'0':color.hex('#9d9867'), '38':color.hex('#828131'), '54':color.hex('#5d5b2a'), '255':color.hex('#000000')}
    '''
    ...

def sample_gradient(list_of_values, t):
    ...

class Bounds:
    __slots__ = ...
    def __init__(self, start, end, center, size) -> None:
        ...



if __name__ == '__main__':
    app = ...
    e1 = ...
    e2 = ...
    between_color = ...
    p = ...
