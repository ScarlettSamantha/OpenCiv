"""
This type stub file was generated by pyright.
"""

import panda3d.core as p3d
from pathlib import Path
from enum import Enum

"""
This type stub file was generated by pyright.
"""
class MeshModes(Enum):
    triangle = ...
    ngon = ...
    quad = ...
    line = ...
    point = ...
    tristrip = ...
    def __hash__(self) -> int:
        ...

    def __eq__(self, other) -> bool:
        ...



class Mesh(p3d.NodePath):
    _modes = ...
    def __init__(self, vertices=..., triangles=..., colors=..., uvs=..., normals=..., static=..., mode=..., thickness=..., render_points_in_3d=..., vertex_buffer=..., vertex_buffer_length=..., vertex_buffer_format=...) -> None:
        ...

    def generate(self):
        ...

    @property
    def indices(self):
        ...

    @property
    def generated_vertices(self):
        ...

    @generated_vertices.setter
    def generated_vertices(self, value):
        ...

    @property
    def recipe(self):
        ...

    @property
    def render_points_in_3d(self):
        ...

    @render_points_in_3d.setter
    def render_points_in_3d(self, value):
        ...

    def __repr__(self):
        ...

    def __str__(self) -> str:
        ...

    def __add__(self, other):
        ...

    def __deepcopy__(self, memo):
        ...

    @property
    def thickness(self):
        ...

    @thickness.setter
    def thickness(self, value):
        ...

    def generate_normals(self, smooth=..., regenerate=...):
        ...

    def colorize(self, left=..., right=..., down=..., up=..., back=..., forward=..., smooth=..., world_space=..., strength=...):
        ...

    def project_uvs(self, aspect_ratio=..., direction=...):
        ...

    def clear(self, regenerate=...):
        ...

    def save(self, name=..., folder: Path = ..., flip_faces=..., max_decimals=...):
        ...



if __name__ == '__main__':
    app = ...
    e = ...
    e = ...
    e = ...
    e = ...
    e = ...
    e = ...
    e = ...
    continious_line = ...
    line_segments = ...
    points = ...
    points_2d = ...
    quad = ...
    quad = ...
    quad = ...
    quad = ...
    quad = ...
    quad = ...
    quad = ...
    copy_test = ...
    deepcopy_test = ...
    clear_test = ...
    recipe_test = ...
