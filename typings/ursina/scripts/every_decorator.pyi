"""
This type stub file was generated by pyright.
"""

from ursina import *

"""
This type stub file was generated by pyright.
"""
class every:
    '''@every  decorator for calling a function on an Entity every n seconds.

        example:
        @every(.1)
        def fixed_update():
            print('check collision')

        Using the @every decorator is the same as doing this in __init__() (on Entity):
        self.animations.append(Sequence(Func(self.fixed_update), Wait(.1), loop=True, started=True))
        The Sequence will call the function every .1 second, while adding it to
        self.animations ensures the Sequence gets cleaned up when the Entity gets destroyed.
    '''
    decorated_methods = ...
    def __init__(self, interval) -> None:
        ...
    
    def __call__(self, func):
        ...
    


def get_class_name(func):
    ...

if __name__ == '__main__':
    app = ...
    class Enemy(Entity):
        @every(0.2)
        def attack(self):
            ...
        
    
    
    enemy = ...
    def input(key):
        ...
    
