"""
This type stub file was generated by pyright.
"""

import os
import typing
from . import _tools, base, encoding

"""Save DOT source lines to a file."""
__all__ = ['Save']
log = ...
class Save(encoding.Encoding, base.Base):
    """Save DOT source lines to file."""
    directory: typing.Union[str, bytes] = ...
    _default_extension = ...
    _mkdirs = ...
    def __init__(self, *, filename: typing.Union[os.PathLike, str], directory: typing.Union[os.PathLike, str, None] = ..., **kwargs) -> None:
        ...

    @property
    def filepath(self) -> str:
        """The target path for saving the DOT source file."""
        ...

    @_tools.deprecate_positional_args(supported_number=2)
    def save(self, filename: typing.Union[os.PathLike, str, None] = ..., directory: typing.Union[os.PathLike, str, None] = ..., *, skip_existing: typing.Optional[bool] = ...) -> str:
        """Save the DOT source to file. Ensure the file ends with a newline.

        Args:
            filename: Filename for saving the source (defaults to ``name`` + ``'.gv'``)
            directory: (Sub)directory for source saving and rendering.
            skip_existing: Skip write if file exists (default: ``False``).

        Returns:
            The (possibly relative) path of the saved source file.
        """
        ...



