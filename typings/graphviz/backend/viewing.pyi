"""
This type stub file was generated by pyright.
"""

import os
import typing
from .. import _tools

"""Open files in platform-specific default viewing application."""
__all__ = ['view']
PLATFORM = ...
log = ...
@_tools.deprecate_positional_args(supported_number=1)
def view(filepath: typing.Union[os.PathLike, str], quiet: bool = ...) -> None:
    """Open filepath with its default viewing application (platform-specific).

    Args:
        filepath: Path to the file to open in viewer.
        quiet: Suppress ``stderr`` output
            from the viewer process (ineffective on Windows).

    Raises:
        RuntimeError: If the current platform is not supported.

    Note:
        There is no option to wait for the application to close,
        and no way to retrieve the application's exit status.
    """
    ...

@_tools.attach(view, 'darwin')
def view_darwin(filepath: typing.Union[os.PathLike, str], *, quiet: bool) -> None:
    """Open filepath with its default application (mac)."""
    ...

@_tools.attach(view, 'linux')
@_tools.attach(view, 'freebsd')
def view_unixoid(filepath: typing.Union[os.PathLike, str], *, quiet: bool) -> None:
    """Open filepath in the user's preferred application (linux, freebsd)."""
    ...

@_tools.attach(view, 'windows')
def view_windows(filepath: typing.Union[os.PathLike, str], *, quiet: bool) -> None:
    """Start filepath with its associated application (windows)."""
    ...

